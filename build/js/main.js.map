{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  var dropdown = document.querySelectorAll('.dropdown');\r\n  for(var i = 0; i < dropdown.length; i++) {\r\n    dropdown[i].addEventListener(\"click\", toggleDropdown);\r\n  }\r\n});\r\n\r\nfunction toggleDropdown(e) {\r\n  var elem = e.target.closest('.dropdown');\r\n  elem.classList.toggle('dropdown--open');\r\n  var options = document.querySelectorAll('.dropdown--open .dropdown__item');\r\n  \r\n  for(var i = 0; i < options.length; i++) {\r\n    options[i].addEventListener(\"click\", selectOption);\r\n  }\r\n}\r\n\r\nfunction selectOption(e) {\r\n  var elem = e.target;\r\n  var option = document.querySelectorAll('.dropdown .dropdown__item--selected');\r\n  option[0].classList.remove('dropdown__item--selected');\r\n  elem.classList.add('dropdown__item--selected');\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  var player = document.getElementById('video-player');\r\n  var control = document.querySelector('.video__controls-play');\r\n  var video = document.querySelector('.video__item');\r\n  var flag = false;\r\n \r\n  video.addEventListener(\"loadedmetadata\", function() {\r\n    var duration = Math.round(video.duration)/100;\r\n    document.querySelector('.video-section__duration').innerHTML = duration;\r\n  });\r\n  \r\n  player.addEventListener(\"click\", function() {\r\n    player.classList.add('video--played');\r\n    flag = !flag;\r\n    \r\n    if(flag) {\r\n      video.play();\r\n    } else {\r\n      video.pause();\r\n    }\r\n    \r\n  });\r\n});\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  var carousel = document.getElementById(\"carousel\");\r\n  var carouselContainer = document.getElementById(\"carousel-container\");\r\n  var tabs = document.getElementById(\"tabs\");\r\n  \r\n  tabs.addEventListener(\"click\", function(e) {\r\n    e.preventDefault();\r\n    if(e.target.tagName !== \"A\") {\r\n      return;\r\n    }\r\n\r\n    HammerCarousel.prototype.show.apply(outer, [e.target.getAttribute(\"data-tab\"), 0, true]);\r\n  });\r\n\r\n  var reqAnimationFrame = (function () {\r\n    return window[Hammer.prefixed(window, \"requestAnimationFrame\")] || function (callback) {\r\n      setTimeout(callback, 1000 / 60);\r\n    }\r\n  })();\r\n\r\n  function dirProp(direction, hProp, vProp) {\r\n    return (direction & Hammer.DIRECTION_HORIZONTAL) ? hProp : vProp\r\n  }\r\n\r\n\r\n  /**\r\n   * Carousel\r\n   * @param container\r\n   * @param direction\r\n   * @constructor\r\n   */\r\n  function HammerCarousel(container, direction) {\r\n    this.container = container;\r\n    this.direction = direction;\r\n\r\n    this.panes = Array.prototype.slice.call(this.container.children, 0);\r\n    this.containerSize = this.container[dirProp(direction, \"offsetWidth\", \"offsetHeight\")];\r\n\r\n    this.currentIndex = 1;\r\n\r\n    this.hammer = new Hammer.Manager(this.container);\r\n    this.hammer.add(new Hammer.Pan({\r\n      direction: this.direction,\r\n      threshold: 10\r\n    }));\r\n    this.hammer.on(\"panstart panmove panend pancancel\", Hammer.bindFn(this.onPan, this));\r\n\r\n    this.show(this.currentIndex);\r\n  }\r\n\r\n\r\n  HammerCarousel.prototype = {\r\n    /**\r\n     * show a pane\r\n     * @param {Number} showIndex\r\n     * @param {Number} [percent] percentage visible\r\n     * @param {Boolean} [animate]\r\n     */\r\n    show: function (showIndex, percent, animate) {\r\n      showIndex = Math.max(0, Math.min(showIndex, this.panes.length - 1));\r\n      percent = percent || 0;\r\n      \r\n      document.querySelector(\".carousel__tab--active\").classList.remove(\"carousel__tab--active\");\r\n      tabs.children[showIndex].classList.add(\"carousel__tab--active\");\r\n      \r\n      if(showIndex === 0) {\r\n          tabs.style.transform = 'translate3d(9.5%, 0, 0)';\r\n      } else if(showIndex === 1) {\r\n        tabs.style.transform = 'translate3d(0, 0, 0)';  \r\n      } else if(showIndex === 2) {\r\n        tabs.style.transform = 'translate3d(-9.5%, 0, 0)';   \r\n      }\r\n     \r\n\r\n      var className = this.container.className;\r\n      if (animate) {\r\n        if (className.indexOf(\"animate\") === -1) {\r\n          this.container.className += \" animate\";\r\n        }\r\n      } else {\r\n        if (className.indexOf(\"animate\") !== -1) {\r\n          this.container.className = className.replace(\"animate\", \"\").trim();\r\n        }\r\n      }\r\n\r\n      var paneIndex, pos, translate;\r\n      for (paneIndex = 0; paneIndex < this.panes.length; paneIndex++) {\r\n        pos = (this.containerSize / 100) * (((paneIndex - showIndex) * 100) + percent);\r\n        if (this.direction & Hammer.DIRECTION_HORIZONTAL) {\r\n          translate = \"translate3d(\" + pos + \"px, 0, 0)\";\r\n        } else {\r\n          translate = \"translate3d(0, \" + pos + \"px, 0)\"\r\n        }\r\n        this.panes[paneIndex].style.transform = translate;\r\n        this.panes[paneIndex].style.mozTransform = translate;\r\n        this.panes[paneIndex].style.webkitTransform = translate;\r\n      }\r\n\r\n      this.currentIndex = showIndex;\r\n    },\r\n\r\n    /**\r\n     * handle pan\r\n     * @param {Object} ev\r\n     */\r\n    onPan: function (ev) {\r\n      var delta = dirProp(this.direction, ev.deltaX, ev.deltaY);\r\n      var percent = (100 / this.containerSize) * delta;\r\n      var animate = false;\r\n\r\n      if (ev.type == \"panend\" || ev.type == \"pancancel\") {\r\n        if (Math.abs(percent) > 20 && ev.type == \"panend\") {\r\n          this.currentIndex += (percent < 0) ? 1 : -1;\r\n        }\r\n        percent = 0;\r\n        animate = true;\r\n      }\r\n\r\n      this.show(this.currentIndex, percent, animate);\r\n    }\r\n  };\r\n\r\n  // the horizontal pane scroller\r\n  var outer = new HammerCarousel(carouselContainer, Hammer.DIRECTION_HORIZONTAL);\r\n});"],"file":"main.js"}